[{"C:\\Users\\camer\\Devmt\\the-study-app\\src\\index.js":"1","C:\\Users\\camer\\Devmt\\the-study-app\\src\\App.js":"2","C:\\Users\\camer\\Devmt\\the-study-app\\src\\reportWebVitals.js":"3","C:\\Users\\camer\\Devmt\\the-study-app\\src\\routes.js":"4","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\About\\About.js":"5","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Journal\\Journal.js":"6","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Notes\\Notes.js":"7","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Login-Register\\Login.js":"8","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Header\\Header.js":"9","C:\\Users\\camer\\Devmt\\the-study-app\\src\\ducks\\reducer.js":"10","C:\\Users\\camer\\Devmt\\the-study-app\\src\\ducks\\store.js":"11","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Journal\\Entry.js":"12","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Notes\\Note.js":"13","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Profile\\Profile.js":"14","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Quotes\\Quotes.js":"15","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Quotes\\Quote.js":"16"},{"size":786,"mtime":1613083994408,"results":"17","hashOfConfig":"18"},{"size":222,"mtime":1611944977020,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":750,"mtime":1612826734072,"results":"21","hashOfConfig":"18"},{"size":445,"mtime":1613081816977,"results":"22","hashOfConfig":"18"},{"size":2891,"mtime":1613095815587,"results":"23","hashOfConfig":"18"},{"size":4319,"mtime":1613096082865,"results":"24","hashOfConfig":"18"},{"size":5124,"mtime":1613098547427,"results":"25","hashOfConfig":"18"},{"size":1058,"mtime":1613002221354,"results":"26","hashOfConfig":"18"},{"size":640,"mtime":1611941274332,"results":"27","hashOfConfig":"18"},{"size":107,"mtime":1611942407702,"results":"28","hashOfConfig":"18"},{"size":1291,"mtime":1613001824135,"results":"29","hashOfConfig":"18"},{"size":2347,"mtime":1613071400726,"results":"30","hashOfConfig":"18"},{"size":8003,"mtime":1613102793431,"results":"31","hashOfConfig":"18"},{"size":4396,"mtime":1613096055762,"results":"32","hashOfConfig":"18"},{"size":2389,"mtime":1613076169269,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1v3nsfo",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\camer\\Devmt\\the-study-app\\src\\index.js",[],["71","72"],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\App.js",[],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\reportWebVitals.js",[],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\routes.js",[],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\About\\About.js",[],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Journal\\Journal.js",["73"],"import axios from 'axios'\r\nimport Entry from './Entry'\r\nimport { connect } from 'react-redux'\r\nimport { useState, useEffect } from 'react'\r\nimport { getUser } from '../../ducks/reducer'\r\nimport './Journal.css'\r\n// import '../../styles/Journal.css'\r\n\r\n\r\n\r\nconst Journal = props => {\r\n    const [journal, setJournal] = useState([])\r\n    const [entry, setEntry] = useState('')\r\n    const [addView, setAddView] = useState(false)\r\n\r\n\r\n    const getJournal = () => {\r\n        const id = props.user.user_id\r\n        axios.get(`/api/journal/${id}`)\r\n            .then(res => {\r\n                setJournal(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const createEntry = () => {\r\n        const id = props.user.user_id\r\n        axios.post(`/api/entry/${id}`, { entry })\r\n            .then(() => {\r\n                setEntry('')\r\n                getJournal()\r\n                // alert('Added Newest Entry')\r\n                addViewFalse()\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        getJournal()\r\n    }, [])\r\n\r\n    const addViewTrue = () => {\r\n        setAddView(true)\r\n    }\r\n\r\n    const addViewFalse = () => {\r\n        setAddView(false)\r\n    }\r\n\r\n\r\n\r\n    const mappedJournal = journal.map(entry => {\r\n        return <Entry\r\n            key={entry.entry_id}\r\n            entry={entry}\r\n            getJournal={getJournal}\r\n            className='entry'\r\n        />\r\n    })\r\n\r\n    return (\r\n\r\n        <div className='journal-page'>\r\n            <section className='content'>\r\n                {addView\r\n                    ? (\r\n                        <>\r\n                            <div className='entry-input-box'>\r\n                                <div className='title-box' >\r\n                                <h2 className='journal-title'>New Entry</h2>\r\n                                </div>\r\n                                <button onClick={addViewFalse}>Return to Journal</button>\r\n                                <input type='text' className='entry-input-text' value={entry}\r\n                                    onChange={e => setEntry(e.target.value)} />\r\n                                <button onClick={createEntry} >Add Entry</button>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                    :\r\n                    <main>\r\n                        <div className='title-box' >\r\n                        <h2 className='journal-title'>Your Journal</h2>\r\n                        </div>\r\n                        <button className='add-view' onClick={addViewTrue}>Add New Entry</button>\r\n                        {mappedJournal}\r\n                    </main>\r\n                }\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = reduxState => reduxState;\r\n\r\nexport default connect(mapStateToProps, { getUser })(Journal);\r\n\r\n","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Notes\\Notes.js",["74"],"import axios from 'axios'\r\nimport Note from './Note'\r\nimport { connect } from 'react-redux'\r\nimport { useState, useEffect } from 'react'\r\nimport { getUser } from '../../ducks/reducer'\r\nimport './Notes.css'\r\n// import '../../styles/Notes.css'\r\n\r\n\r\nconst Notes = props => {\r\n    const [notes, setNotes] = useState([])\r\n    const [note, setNote] = useState('')\r\n    const [addView, setAddView] = useState(false)\r\n\r\n\r\n    const getNotes = () => {\r\n        const id = props.user.user_id\r\n        axios.get(`/api/notes/${id}`)\r\n            .then(res => {\r\n                setNotes(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const createNote = () => {\r\n        const id = props.user.user_id\r\n        axios.post(`/api/note/${id}`, { note })\r\n            .then(() => {\r\n                setNote('')\r\n                getNotes()\r\n                addViewFalse()\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        getNotes()\r\n    }, [])\r\n\r\n    const addViewTrue = () => {\r\n        setAddView(true)\r\n    }\r\n\r\n    const addViewFalse = () => {\r\n        setAddView(false)\r\n    }\r\n\r\n\r\n\r\n    const mappedNotes = notes.map(note => {\r\n        return <Note\r\n            key={note.note_id}\r\n            note={note}\r\n            getNotes={getNotes}\r\n            className='note'\r\n        />\r\n    })\r\n\r\n    return (\r\n\r\n        <div className='notes-page'>\r\n            <section className='content'>\r\n                {addView\r\n                    ? (\r\n                        <>\r\n                            <div className='note-input-box'>\r\n                                <div className='title-box' >\r\n                                <h2 className='notes-title'>New Note</h2>\r\n                                </div>\r\n                                <button onClick={addViewFalse}>Return to Notes</button>\r\n                                <input type='text' className='note-input-text' value={note}\r\n                                    onChange={e => setNote(e.target.value)} />\r\n                                <button onClick={createNote} >Add Note</button>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                    :\r\n                    <main>\r\n                        <div className='title-box' >\r\n                        <h2 className='notes-title'>Your Notes</h2>\r\n                        </div>\r\n                        <button className='add-view' onClick={addViewTrue}>Add New Note</button>\r\n                        {mappedNotes}\r\n                    </main>\r\n                }\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = reduxState => reduxState;\r\n\r\nexport default connect(mapStateToProps, { getUser })(Notes);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const Notes = props => {\r\n//     const [notes, setNotes] = useState([])\r\n//     const [note, setNote] = useState('')\r\n\r\n// const getNotes = () => {\r\n//     const id = props.user.user_id\r\n//     axios.get(`/api/notes/${id}`)\r\n//         .then(res => {\r\n//             setNotes(res.data)\r\n//         })\r\n//         .catch(err => console.log(err))\r\n// }\r\n\r\n//     const createNote = () => {\r\n//         const id = props.user.user_id\r\n//         axios.post(`/api/note/${id}`, { note })\r\n//             .then(() => {\r\n//                 setNote('')\r\n//                 getNotes()\r\n//             })\r\n//             .catch(err => console.log(err))\r\n//     }\r\n\r\n//     useEffect(() => {\r\n//         getNotes()\r\n//     }, [])\r\n\r\n//     const mappedNotes = notes.map( note => {\r\n//         return <Note\r\n//             key={note.note_id}\r\n//             note={note}\r\n//             getNotes={getNotes}\r\n//             className='note'\r\n//         />\r\n//     })\r\n\r\n//     return (\r\n\r\n//         <div className='notes-page'>\r\n//             <header>Your Notes</header>\r\n//             <div className='note-input-box'>\r\n//                 <input className='note-input-text' value={note}\r\n//                     onChange={e => setNote(e.target.value)} />\r\n//                 <button onClick={createNote}>Add Note</button>\r\n//             </div>\r\n//             {mappedNotes}\r\n//         </div>\r\n//     )\r\n// }\r\n// const mapStateToProps = reduxState => reduxState;\r\n\r\n// export default connect(mapStateToProps, { getUser })(Notes)\r\n","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Login-Register\\Login.js",["75"],"import { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { getUser } from '..//../ducks/reducer'\r\nimport './Login.css'\r\n// const nodemailer =require('nodemailer')\r\nimport nodemailer from 'nodemailer'\r\n// import '../../styles/Login.css'\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            verPassword: '',\r\n            registerView: false\r\n        }\r\n    }\r\n\r\n    // sendEmail = () => {\r\n    //     nodemailer.sendMail({\r\n    //         from: '\"Your Study\" <cammien88@gmail.com>', // sender address\r\n    //         to: `${this.email}`, // list of receivers\r\n    //         subject: \"Welcome\", // Subject line\r\n    //         text: `Hello ${this.username}, welcome to Your Study!`, // plain text body\r\n    //         html: \"<b>Hello world?</b>\", // html body\r\n    //       });\r\n    // }\r\n\r\n    handleInput = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value })\r\n    }\r\n\r\n    handleToggle = () => {\r\n        this.setState({ registerView: !this.state.registerView })\r\n    }\r\n\r\n    handleRegister = () => {\r\n        const { username, email, password, verPassword } = this.state\r\n\r\n        if (password && password === verPassword) {\r\n            axios.post('/api/register', { username, email, password })\r\n                .then(res => {\r\n                    this.props.getUser(res.data)\r\n                    this.props.history.push('/profile')\r\n                    // this.sendEmail()\r\n                })\r\n                .catch(err => console.log(err))\r\n        } else {\r\n            alert(\"Passwords don't match\")\r\n        }\r\n    }\r\n\r\n    handleLogin = () => {\r\n        const { email, password } = this.state\r\n\r\n        axios.post('/api/login', { email, password })\r\n            .then(res => {\r\n                this.props.getUser(res.data)\r\n                this.props.history.push('/profile')\r\n            })\r\n            .catch(err =>alert('Username or Password not found, please try again')\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='login-page'>\r\n                <section className='authentication-info'>\r\n                    <h1 className='enter'>Enter Your Study</h1>\r\n                    {this.state.registerView\r\n                        ? (\r\n                            <>\r\n                                <h3 className='login-here-text' >Register Here</h3>\r\n                                <input className='input-class'\r\n                                    value={this.state.username}\r\n                                    name='username'\r\n                                    placeholder='Username'\r\n                                    onChange={e => this.handleInput(e)} />\r\n                            </>\r\n                        )\r\n                        :\r\n                        <h3 className='login-here-text'>Login Here</h3>}\r\n                    <input className='input-class'\r\n                        value={this.state.email}\r\n                        name='email'\r\n                        placeholder='Email'\r\n                        onChange={e => this.handleInput(e)} />\r\n                    <input className='input-class'\r\n                        value={this.state.password}\r\n                        name='password'\r\n                        type='password'\r\n                        placeholder='Password'\r\n                        onChange={e => this.handleInput(e)} />\r\n                    {this.state.registerView\r\n                        ?\r\n                        (\r\n                            <>\r\n                                <input className='input-class'\r\n                                    value={this.state.verPassword}\r\n                                    name='verPassword'\r\n                                    type='password'\r\n                                    placeholder='Verify Password'\r\n                                    onChange={e => this.handleInput(e)} />\r\n                                {/* <input className='input-class'\r\n                                    value={this.state.profilePicture}\r\n                                    name='profilePicture'\r\n                                    placeholder='Profile Picture URL'\r\n                                    onChange={e => this.handleInput(e)} /> */}\r\n                                <button onClick={this.handleRegister}>Register</button>\r\n                                <p>Have an account? <span onClick={this.handleToggle}>Login here</span></p>\r\n                            </>\r\n                        )\r\n                        : (\r\n                            <>\r\n                                <button onClick={this.handleLogin}>Login</button>\r\n                                <p>Don't have an account? <span onClick={this.handleToggle}>Register here</span></p>\r\n                            </>\r\n                        )}\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, { getUser })(Login)","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Header\\Header.js",[],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\ducks\\reducer.js",[],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\ducks\\store.js",[],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Journal\\Entry.js",[],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Notes\\Note.js",[],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Profile\\Profile.js",[],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Quotes\\Quotes.js",["76"],"import axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { useState, useEffect } from 'react'\r\nimport { getUser } from '../../ducks/reducer'\r\nimport Quote from './Quote'\r\nimport './Quotes.css'\r\n// import '../../styles/Quotes.css'\r\n\r\n\r\nconst Quotes = props => {\r\n    const [quotes, setQuotes] = useState([])\r\n    const [quote, setQuote] = useState('')\r\n    const [addView, setAddView] = useState(false)\r\n\r\n\r\n    const getQuotes = () => {\r\n        const id = props.user.user_id\r\n        axios.get(`/api/quotes/${id}`)\r\n            .then(res => {\r\n                setQuotes(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const createQuote = () => {\r\n        const id = props.user.user_id\r\n        axios.post(`/api/quote/${id}`, { quote })\r\n            .then(() => {\r\n                setQuote('')\r\n                getQuotes()\r\n                addViewFalse()\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        getQuotes()\r\n    }, [])\r\n\r\n    const addViewTrue = () => {\r\n        setAddView(true)\r\n    }\r\n\r\n    const addViewFalse = () => {\r\n        setAddView(false)\r\n    }\r\n\r\n\r\n\r\n    const mappedQuotes = quotes.map(quote => {\r\n        return <Quote\r\n            key={quote.quote_id}\r\n            quote={quote}\r\n            getQuotes={getQuotes}\r\n            className='quote'\r\n        />\r\n    })\r\n\r\n    return (\r\n\r\n        <div className='quotes-page'>\r\n            <section className='content'>\r\n                {addView\r\n                    ? (\r\n                        <>\r\n                            <div className='quote-input-box'>\r\n                            <div className='title-box' >\r\n                                <h2 className='quotes-title'>New Note</h2>\r\n                                </div>\r\n                                <button onClick={addViewFalse}>Return to Quotes</button>\r\n                                <input type='text' className='quote-input-text' value={quote}\r\n                                    onChange={e => setQuote(e.target.value)} />\r\n                                <button onClick={createQuote} >Add Quote</button>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                    :\r\n                    <main>\r\n                        <div className='title-box' >\r\n                        <h2 className='quotes-title'>Your Quotes</h2>\r\n                        </div>\r\n                        <button className='add-view' onClick={addViewTrue}>Add New Quote</button>\r\n                        {mappedQuotes}\r\n                    </main>\r\n                }\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = reduxState => reduxState;\r\n\r\nexport default connect(mapStateToProps, { getUser })(Quotes);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const Quotes = props => {\r\n\r\n//     const [quotes, setQuotes] = useState([])\r\n//     const [quote, setQuote] = useState('')\r\n\r\n//     const getQuotes = () => {\r\n//         const id = props.user.user_id\r\n//         axios.get(`/api/quotes/${id}`)\r\n//             .then(res => {\r\n//                 setQuotes(res.data)\r\n//             })\r\n//             .catch(err => console.log(err))\r\n//     }\r\n\r\n//     const createQuote = () => {\r\n//         const id = props.user.user_id\r\n//         axios.post(`/api/quote/${id}`, { quote })\r\n//             .then(() => {\r\n//                 setQuote('')\r\n//                 getQuotes()\r\n//             })\r\n//             .catch(err => console.log(err))\r\n//     }\r\n\r\n//     useEffect(() => {\r\n//         getQuotes()\r\n//     }, [])\r\n\r\n//     const mappedQuotes = quotes.map(quote => {\r\n//         return <Quote\r\n//             key={quote.quote_id}\r\n//             quote={quote}\r\n//             getQuotes={getQuotes}\r\n//         />\r\n//     })\r\n\r\n//     return(\r\n        \r\n//         <div className='quotes-page'>\r\n//         <header>Your Favorite Quotes</header>\r\n//         <div className='quote-input-box'>\r\n//                 <input className='quote-input-text' value={quote}\r\n//                     onChange={e => setQuote(e.target.value)} />\r\n//                 <button onClick={createQuote}>Add Entry</button>\r\n//             </div>\r\n//             {mappedQuotes}\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// const mapStateToProps = reduxState => reduxState;\r\n\r\n// export default connect(mapStateToProps, { getUser })(Quotes);\r\n\r\n ","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Quotes\\Quote.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":40,"column":8,"nodeType":"83","endLine":40,"endColumn":10,"suggestions":"84"},{"ruleId":"81","severity":1,"message":"85","line":38,"column":8,"nodeType":"83","endLine":38,"endColumn":10,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":7,"column":8,"nodeType":"89","messageId":"90","endLine":7,"endColumn":18},{"ruleId":"81","severity":1,"message":"91","line":38,"column":8,"nodeType":"83","endLine":38,"endColumn":10,"suggestions":"92"},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getJournal'. Either include it or remove the dependency array.","ArrayExpression",["95"],"React Hook useEffect has a missing dependency: 'getNotes'. Either include it or remove the dependency array.",["96"],"no-unused-vars","'nodemailer' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getQuotes'. Either include it or remove the dependency array.",["97"],"no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},"Update the dependencies array to be: [getJournal]",{"range":"104","text":"105"},"Update the dependencies array to be: [getNotes]",{"range":"106","text":"107"},"Update the dependencies array to be: [getQuotes]",{"range":"108","text":"109"},[1090,1092],"[getJournal]",[1012,1014],"[getNotes]",[1030,1032],"[getQuotes]"]