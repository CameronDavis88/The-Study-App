[{"C:\\Users\\camer\\Devmt\\the-study-app\\src\\index.js":"1","C:\\Users\\camer\\Devmt\\the-study-app\\src\\App.js":"2","C:\\Users\\camer\\Devmt\\the-study-app\\src\\reportWebVitals.js":"3","C:\\Users\\camer\\Devmt\\the-study-app\\src\\routes.js":"4","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\About\\About.js":"5","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Journal\\Journal.js":"6","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Notes\\Notes.js":"7","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Login-Register\\Login.js":"8","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Header\\Header.js":"9","C:\\Users\\camer\\Devmt\\the-study-app\\src\\ducks\\reducer.js":"10","C:\\Users\\camer\\Devmt\\the-study-app\\src\\ducks\\store.js":"11","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Journal\\Entry.js":"12","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Notes\\Note.js":"13","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Profile\\Profile.js":"14","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Quotes\\Quotes.js":"15","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Quotes\\Quote.js":"16"},{"size":786,"mtime":1613083994408,"results":"17","hashOfConfig":"18"},{"size":222,"mtime":1611944977020,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":746,"mtime":1613141792479,"results":"21","hashOfConfig":"18"},{"size":445,"mtime":1613081816977,"results":"22","hashOfConfig":"18"},{"size":2946,"mtime":1614182597350,"results":"23","hashOfConfig":"18"},{"size":2878,"mtime":1614185254953,"results":"24","hashOfConfig":"18"},{"size":4127,"mtime":1614279958372,"results":"25","hashOfConfig":"18"},{"size":2385,"mtime":1614804153602,"results":"26","hashOfConfig":"18"},{"size":640,"mtime":1611941274332,"results":"27","hashOfConfig":"18"},{"size":107,"mtime":1611942407702,"results":"28","hashOfConfig":"18"},{"size":1200,"mtime":1613148362799,"results":"29","hashOfConfig":"18"},{"size":2291,"mtime":1613141400908,"results":"30","hashOfConfig":"18"},{"size":6331,"mtime":1614279991254,"results":"31","hashOfConfig":"18"},{"size":2927,"mtime":1614182825216,"results":"32","hashOfConfig":"18"},{"size":1250,"mtime":1613141561295,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1v3nsfo",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\camer\\Devmt\\the-study-app\\src\\index.js",[],["70","71"],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\App.js",[],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\reportWebVitals.js",[],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\routes.js",[],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\About\\About.js",[],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Journal\\Journal.js",["72"],"import axios from 'axios'\r\nimport Entry from './Entry'\r\nimport { connect } from 'react-redux'\r\nimport { useState, useEffect } from 'react'\r\nimport { getUser } from '../../ducks/reducer'\r\nimport './Journal.css'\r\n\r\nconst Journal = props => {\r\n\r\n    const [journal, setJournal] = useState([])\r\n    const [entry, setEntry] = useState('')\r\n    const [addView, setAddView] = useState(false)\r\n\r\n    const getJournal = () => {\r\n        const id = props.user.user_id\r\n        axios.get(`/api/journal/${id}`)\r\n            .then(res => {\r\n                setJournal(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    const createEntry = () => {\r\n        const id = props.user.user_id\r\n        axios.post(`/api/entry/${id}`, { entry })\r\n            .then(() => {\r\n                setEntry('')\r\n                getJournal()\r\n                addViewFalse()\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const loggedinView = () => {\r\n        if(!props.user.user_id){\r\n            props.history.push('/')\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getJournal()\r\n        loggedinView()\r\n    }, [])\r\n\r\n    const addViewTrue = () => {\r\n        setAddView(true)\r\n    }\r\n\r\n    const addViewFalse = () => {\r\n        setAddView(false)\r\n    }\r\n\r\n    const mappedJournal = journal.map(entry => {\r\n        return <Entry\r\n            key={entry.entry_id}\r\n            entry={entry}\r\n            getJournal={getJournal}\r\n            className='entry'\r\n        />\r\n    })\r\n\r\n    return (\r\n\r\n        <div className='journal-page'>\r\n            <section className='content'>\r\n                {addView\r\n                    ? (\r\n                        <>\r\n                            <div className='entry-input-box'>\r\n                                <div className='title-box' >\r\n                                <h2 className='journal-title'>New Entry</h2>\r\n                                </div>\r\n                                <button onClick={addViewFalse}>Return to Journal</button>\r\n                                <input type='text' className='entry-input-text' value={entry}\r\n                                    onChange={e => setEntry(e.target.value)} />\r\n                                <button onClick={createEntry} >Add Entry</button>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                    :\r\n                    <main>\r\n                        <div className='title-box' >\r\n                        <h2 className='journal-title'>Your Journal</h2>\r\n                        </div>\r\n                        <button className='add-view' onClick={addViewTrue}>Add New Entry</button>\r\n                        {mappedJournal}\r\n                    </main>\r\n                }\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = reduxState => reduxState;\r\n\r\nexport default connect(mapStateToProps, { getUser })(Journal);\r\n\r\n","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Notes\\Notes.js",["73"],"import axios from 'axios'\r\nimport Note from './Note'\r\nimport { connect } from 'react-redux'\r\nimport { useState, useEffect } from 'react'\r\nimport { getUser } from '../../ducks/reducer'\r\nimport './Notes.css'\r\n\r\nconst Notes = props => {\r\n    const [notes, setNotes] = useState([])\r\n    const [note, setNote] = useState('')\r\n    const [addView, setAddView] = useState(false)\r\n\r\n    const getNotes = () => {\r\n        const id = props.user.user_id\r\n        axios.get(`/api/notes/${id}`)\r\n            .then(res => {\r\n                setNotes(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const createNote = () => {\r\n        const id = props.user.user_id\r\n        axios.post(`/api/note/${id}`, { note })\r\n            .then(() => {\r\n                setNote('')\r\n                getNotes()\r\n                addViewFalse()\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n   const loggedinView = () => {\r\n        if (!props.user.user_id) {\r\n            props.history.push('/')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loggedinView()\r\n        getNotes()\r\n    }, [])\r\n\r\n    const addViewTrue = () => {\r\n        setAddView(true)\r\n    }\r\n\r\n    const addViewFalse = () => {\r\n        setAddView(false)\r\n    }\r\n\r\n    const mappedNotes = notes.map(note => {\r\n        return <Note\r\n            key={note.note_id}\r\n            note={note}\r\n            getNotes={getNotes}\r\n            className='note'\r\n        />\r\n    })\r\n\r\n    return (\r\n\r\n        <div className='notes-page'>\r\n            <section className='content'>\r\n                {addView\r\n                    ? \r\n                        <>\r\n                            <div className='note-input-box'>\r\n                                <div className='title-box' >\r\n                                <h2 className='notes-title'>New Note</h2>\r\n                                </div>\r\n                                <button onClick={addViewFalse}>Return to Notes</button>\r\n                                <input type='text' className='note-input-text' value={note}\r\n                                    onChange={e => setNote(e.target.value)} />\r\n                                <button onClick={createNote} >Add Note</button>\r\n                            </div>\r\n                        </>\r\n                    \r\n                    :\r\n                    <main>\r\n                        <div className='title-box' >\r\n                        <h2 className='notes-title'>Your Notes</h2>\r\n                        </div>\r\n                        <button className='add-view' onClick={addViewTrue}>Add New Note</button>\r\n                        {mappedNotes}\r\n                    </main>\r\n                }\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = reduxState => reduxState;\r\n\r\nexport default connect(mapStateToProps, { getUser })(Notes);\r\n","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Login-Register\\Login.js",[],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Header\\Header.js",[],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\ducks\\reducer.js",[],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\ducks\\store.js",[],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Journal\\Entry.js",[],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Notes\\Note.js",[],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Profile\\Profile.js",[],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Quotes\\Quotes.js",["74"],"import axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { useState, useEffect } from 'react'\r\nimport { getUser } from '../../ducks/reducer'\r\nimport Quote from './Quote'\r\nimport './Quotes.css'\r\n\r\nconst Quotes = props => {\r\n    const [quotes, setQuotes] = useState([])\r\n    const [quote, setQuote] = useState('')\r\n    const [addView, setAddView] = useState(false)\r\n\r\n    const getQuotes = () => {\r\n        const id = props.user.user_id\r\n        axios.get(`/api/quotes/${id}`)\r\n            .then(res => {\r\n                setQuotes(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const createQuote = () => {\r\n        const id = props.user.user_id\r\n        axios.post(`/api/quote/${id}`, { quote })\r\n            .then(() => {\r\n                setQuote('')\r\n                getQuotes()\r\n                addViewFalse()\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const loggedinView = () => {\r\n        if (!props.user.user_id) {\r\n            props.history.push('/')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loggedinView()\r\n        getQuotes()\r\n    }, [])\r\n\r\n    const addViewTrue = () => {\r\n        setAddView(true)\r\n    }\r\n\r\n    const addViewFalse = () => {\r\n        setAddView(false)\r\n    }\r\n\r\n    const mappedQuotes = quotes.map(quote => {\r\n        return <Quote\r\n            key={quote.quote_id}\r\n            quote={quote}\r\n            getQuotes={getQuotes}\r\n            className='quote'\r\n        />\r\n    })\r\n\r\n    return (\r\n\r\n        <div className='quotes-page'>\r\n            <section className='content'>\r\n                {addView\r\n                    ? (\r\n                        <>\r\n                            <div className='quote-input-box'>\r\n                            <div className='title-box' >\r\n                                <h2 className='quotes-title'>New Note</h2>\r\n                                </div>\r\n                                <button onClick={addViewFalse}>Return to Quotes</button>\r\n                                <input type='text' className='quote-input-text' value={quote}\r\n                                    onChange={e => setQuote(e.target.value)} />\r\n                                <button onClick={createQuote} >Add Quote</button>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                    :\r\n                    <main>\r\n                        <div className='title-box' >\r\n                        <h2 className='quotes-title'>Your Quotes</h2>\r\n                        </div>\r\n                        <button className='add-view' onClick={addViewTrue}>Add New Quote</button>\r\n                        {mappedQuotes}\r\n                    </main>\r\n                }\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = reduxState => reduxState;\r\n\r\nexport default connect(mapStateToProps, { getUser })(Quotes);\r\n\r\n\r\n\r\n\r\n","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Quotes\\Quote.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":43,"column":8,"nodeType":"81","endLine":43,"endColumn":10,"suggestions":"82"},{"ruleId":"79","severity":1,"message":"83","line":42,"column":8,"nodeType":"81","endLine":42,"endColumn":10,"suggestions":"84"},{"ruleId":"79","severity":1,"message":"85","line":42,"column":8,"nodeType":"81","endLine":42,"endColumn":10,"suggestions":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getJournal' and 'loggedinView'. Either include them or remove the dependency array.","ArrayExpression",["89"],"React Hook useEffect has missing dependencies: 'getNotes' and 'loggedinView'. Either include them or remove the dependency array.",["90"],"React Hook useEffect has missing dependencies: 'getQuotes' and 'loggedinView'. Either include them or remove the dependency array.",["91"],"no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},"Update the dependencies array to be: [getJournal, loggedinView]",{"range":"98","text":"99"},"Update the dependencies array to be: [getNotes, loggedinView]",{"range":"100","text":"101"},"Update the dependencies array to be: [getQuotes, loggedinView]",{"range":"102","text":"103"},[1149,1151],"[getJournal, loggedinView]",[1122,1124],"[getNotes, loggedinView]",[1140,1142],"[getQuotes, loggedinView]"]