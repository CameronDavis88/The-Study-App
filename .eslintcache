[{"C:\\Users\\camer\\Devmt\\the-study-app\\src\\index.js":"1","C:\\Users\\camer\\Devmt\\the-study-app\\src\\App.js":"2","C:\\Users\\camer\\Devmt\\the-study-app\\src\\reportWebVitals.js":"3","C:\\Users\\camer\\Devmt\\the-study-app\\src\\routes.js":"4","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\About\\About.js":"5","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Journal\\Journal.js":"6","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Notes\\Notes.js":"7","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Login-Register\\Login.js":"8","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Header\\Header.js":"9","C:\\Users\\camer\\Devmt\\the-study-app\\src\\ducks\\reducer.js":"10","C:\\Users\\camer\\Devmt\\the-study-app\\src\\ducks\\store.js":"11","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Journal\\Entry.js":"12","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Notes\\Note.js":"13","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Profile\\Profile.js":"14","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Quotes\\Quotes.js":"15","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Quotes\\Quote.js":"16"},{"size":786,"mtime":1613083994408,"results":"17","hashOfConfig":"18"},{"size":222,"mtime":1611944977020,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":746,"mtime":1613141792479,"results":"21","hashOfConfig":"18"},{"size":577,"mtime":1615400501756,"results":"22","hashOfConfig":"18"},{"size":3115,"mtime":1614809631713,"results":"23","hashOfConfig":"18"},{"size":3010,"mtime":1614809579754,"results":"24","hashOfConfig":"18"},{"size":4194,"mtime":1615399216617,"results":"25","hashOfConfig":"18"},{"size":2385,"mtime":1614804153602,"results":"26","hashOfConfig":"18"},{"size":640,"mtime":1611941274332,"results":"27","hashOfConfig":"18"},{"size":107,"mtime":1611942407702,"results":"28","hashOfConfig":"18"},{"size":1292,"mtime":1614809597480,"results":"29","hashOfConfig":"18"},{"size":2383,"mtime":1614809588588,"results":"30","hashOfConfig":"18"},{"size":6579,"mtime":1614884291443,"results":"31","hashOfConfig":"18"},{"size":3147,"mtime":1614809539499,"results":"32","hashOfConfig":"18"},{"size":1342,"mtime":1614809561471,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1v3nsfo",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\camer\\Devmt\\the-study-app\\src\\index.js",[],["71","72"],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\App.js",[],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\reportWebVitals.js",[],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\routes.js",[],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\About\\About.js",[],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Journal\\Journal.js",["73"],"import axios from 'axios'\r\nimport Entry from './Entry'\r\nimport { connect } from 'react-redux'\r\nimport { useState, useEffect } from 'react'\r\nimport { getUser } from '../../ducks/reducer'\r\nimport './Journal.css'\r\n\r\nconst Journal = props => {\r\n\r\n    const [journal, setJournal] = useState([])\r\n    const [entry, setEntry] = useState('')\r\n    const [addView, setAddView] = useState(false)\r\n\r\n    const getJournal = () => {\r\n        const id = props.user.user_id\r\n        axios.get(`/api/journal/${id}`)\r\n            .then(res => {\r\n                setJournal(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    const createEntry = () => {\r\n        const id = props.user.user_id\r\n        axios.post(`/api/entry/${id}`, { entry })\r\n            .then(() => {\r\n                setEntry('')\r\n                getJournal()\r\n                addViewFalse()\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const loggedinView = () => {\r\n        if (!props.user.user_id) {\r\n            props.history.push('/')\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getJournal()\r\n        loggedinView()\r\n    }, [])\r\n\r\n    const addViewTrue = () => {\r\n        setAddView(true)\r\n    }\r\n\r\n    const addViewFalse = () => {\r\n        setAddView(false)\r\n    }\r\n\r\n    const mappedJournal = journal.map(entry => {\r\n        return <Entry\r\n            key={entry.entry_id}\r\n            entry={entry}\r\n            getJournal={getJournal}\r\n            className='entry'\r\n        />\r\n    })\r\n\r\n    return (\r\n\r\n        <div className='journal-page'>\r\n            <section className='content'>\r\n                {addView\r\n                    ? (\r\n                        <>\r\n                            <div className='entry-input-box'>\r\n                                <div className='title-box' >\r\n                                    <h2 className='journal-title'>New Entry</h2>\r\n                                </div>\r\n                                <button onClick={addViewFalse}>Return to Journal</button>\r\n                                <textarea\r\n                                    rows='5'\r\n                                    cols='100'\r\n                                    className='entry-input-text'\r\n                                    value={entry}\r\n                                    onChange={e => setEntry(e.target.value)} />\r\n                                <button onClick={createEntry} >Add Entry</button>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                    :\r\n                    <main>\r\n                        <div className='title-box' >\r\n                            <h2 className='journal-title'>Your Journal</h2>\r\n                        </div>\r\n                        <button className='add-view' onClick={addViewTrue}>Add New Entry</button>\r\n                        {mappedJournal}\r\n                    </main>\r\n                }\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = reduxState => reduxState;\r\n\r\nexport default connect(mapStateToProps, { getUser })(Journal);\r\n\r\n","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Notes\\Notes.js",["74"],"import axios from 'axios'\r\nimport Note from './Note'\r\nimport { connect } from 'react-redux'\r\nimport { useState, useEffect } from 'react'\r\nimport { getUser } from '../../ducks/reducer'\r\nimport './Notes.css'\r\n\r\nconst Notes = props => {\r\n    const [notes, setNotes] = useState([])\r\n    const [note, setNote] = useState('')\r\n    const [addView, setAddView] = useState(false)\r\n\r\n    const getNotes = () => {\r\n        const id = props.user.user_id\r\n        axios.get(`/api/notes/${id}`)\r\n            .then(res => {\r\n                setNotes(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const createNote = () => {\r\n        const id = props.user.user_id\r\n        axios.post(`/api/note/${id}`, { note })\r\n            .then(() => {\r\n                setNote('')\r\n                getNotes()\r\n                addViewFalse()\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const loggedinView = () => {\r\n        if (!props.user.user_id) {\r\n            props.history.push('/')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loggedinView()\r\n        getNotes()\r\n    }, [])\r\n\r\n    const addViewTrue = () => {\r\n        setAddView(true)\r\n    }\r\n\r\n    const addViewFalse = () => {\r\n        setAddView(false)\r\n    }\r\n\r\n    const mappedNotes = notes.map(note => {\r\n        return <Note\r\n            key={note.note_id}\r\n            note={note}\r\n            getNotes={getNotes}\r\n            className='note'\r\n        />\r\n    })\r\n\r\n    return (\r\n\r\n        <div className='notes-page'>\r\n            <section className='content'>\r\n                {addView\r\n                    ?\r\n                    <>\r\n                        <div className='note-input-box'>\r\n                            <div className='title-box' >\r\n                                <h2 className='notes-title'>New Note</h2>\r\n                            </div>\r\n                            <button onClick={addViewFalse}>Return to Notes</button>\r\n                            <textarea\r\n                                rows='5'\r\n                                cols='100'\r\n                                type='text'\r\n                                className='note-input-text'\r\n                                value={note}\r\n                                onChange={e => setNote(e.target.value)} />\r\n                            <button onClick={createNote} >Add Note</button>\r\n                        </div>\r\n                    </>\r\n\r\n                    :\r\n                    <main>\r\n                        <div className='title-box' >\r\n                            <h2 className='notes-title'>Your Notes</h2>\r\n                        </div>\r\n                        <button className='add-view' onClick={addViewTrue}>Add New Note</button>\r\n                        {mappedNotes}\r\n                    </main>\r\n                }\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = reduxState => reduxState;\r\n\r\nexport default connect(mapStateToProps, { getUser })(Notes);\r\n","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Login-Register\\Login.js",[],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Header\\Header.js",[],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\ducks\\reducer.js",[],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\ducks\\store.js",[],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Journal\\Entry.js",[],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Notes\\Note.js",[],"C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Profile\\Profile.js",["75"],"import { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { getUser } from '../../ducks/reducer'\r\nimport './Profile.css'\r\n\r\nclass Profile extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        const { username, email, password } = this.props.user\r\n        this.state = {\r\n            username: username,\r\n            email: email,\r\n            password: password,\r\n            verPassword: '',\r\n            editingView: false\r\n\r\n        }\r\n    }\r\n\r\n    loggedinView = () => {\r\n        if (!this.props.user.user_id) {\r\n            this.props.history.push('/')\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loggedinView()\r\n        getUser()\r\n    }\r\n\r\n    editView = () => {\r\n        this.setState({ editingView: true })\r\n    }\r\n\r\n    homeView = () => {\r\n        this.setState({ editingView: false })\r\n    }\r\n\r\n    handleInput = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value })\r\n    }\r\n\r\n    editUsername = () => {\r\n        const id = this.props.user.user_id\r\n        const username = this.state.username\r\n        axios.put(`/api/user/${id}`, { username })\r\n            .then(res => {\r\n                this.setState({ username: res.data.username })\r\n                alert('Username Updated')\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    editPassword = () => {\r\n        const id = this.props.user.user_id\r\n        const { password, verPassword } = this.state\r\n\r\n        if (password && password === verPassword) {\r\n            axios.put(`/api/user_password/${id}`, { password })\r\n                .then(res => {\r\n                    this.setState({ password: res.data.password })\r\n                    alert('Password Updated')\r\n                })\r\n                .catch(err => console.log(err))\r\n        } else {\r\n            alert(\"Passwords don't match\")\r\n        }\r\n    }\r\n\r\n    editEmail = () => {\r\n        const id = this.props.user.user_id\r\n        const email = this.state.email\r\n        axios.put(`/api/user_email/${id}`, { email })\r\n            .then(res => {\r\n                this.setState({ email: res.data.email })\r\n                alert('Email Updated')\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    toJournal = () => {\r\n        this.props.history.push('/journal')\r\n    }\r\n\r\n    toNotes = () => {\r\n        this.props.history.push('/notes')\r\n    }\r\n\r\n    toQuotes = () => {\r\n        this.props.history.push('/quotes')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='home-page'>\r\n                <section className='authentication-info'>\r\n                    {this.state.editingView\r\n                        ? (\r\n                            <>\r\n                                <section className='updating-box'>\r\n                                    <h3 className='update-title'>Update Your Info</h3>\r\n                                    <div className='update-username-box'>\r\n                                        <input\r\n                                            className='inputs'\r\n                                            value={this.state.username}\r\n                                            name='username'\r\n                                            placeholder='Username'\r\n                                            onChange={e => this.handleInput(e)} />\r\n\r\n                                        <button onClick={this.editUsername}>Update</button>\r\n                                    </div>\r\n                                    <div className='update-username-box'>\r\n                                        <input className='inputs'\r\n                                            value={this.state.email}\r\n                                            name='email'\r\n                                            placeholder='Email'\r\n                                            onChange={e => this.handleInput(e)} />\r\n                                        <button onClick={this.editEmail}>Update</button>\r\n                                    </div>\r\n\r\n                                    <input\r\n                                        value={this.state.password}\r\n                                        className='inputs'\r\n                                        name='password'\r\n                                        type='password'\r\n                                        placeholder='Password'\r\n                                        onChange={e => this.handleInput(e)} />\r\n                                    <button onClick={this.editPassword}>Update</button>\r\n                                    <h1></h1>\r\n                                  \r\n                                    <input\r\n                                        value={this.state.verPassword}\r\n                                        className='inputs'\r\n                                        name='verPassword'\r\n                                        type='password'\r\n                                        placeholder='Verify Password'\r\n                                        onChange={e => this.handleInput(e)} />\r\n                                </section>\r\n                                <button onClick={this.homeView} className='finished'>Finished Updating</button>\r\n                            </>\r\n                        )\r\n                        : <div className='profile-display'>\r\n                            <div className='user-update'>\r\n                                <div className='title-box' >\r\n                                    <h2 className='username'>Welcome to Your Desk</h2>\r\n                                </div>\r\n                                <div className='title-box' >\r\n                                    <h3 onClick={this.editView} className='update'>-update your info here-</h3>\r\n                                </div>\r\n                            </div>\r\n                            <div className='link-box'>\r\n                                <h2 className='notes' onClick={this.toNotes} >Notes</h2>\r\n                                <h2 className='journal' onClick={this.toJournal}>Journal</h2>\r\n                                <h2 className='quotes' onClick={this.toQuotes}>Quotes</h2>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = reduxState => reduxState;\r\n\r\nexport default withRouter(connect(mapStateToProps, { getUser })(Profile));\r\n\r\n","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Quotes\\Quotes.js",["76"],"import axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { useState, useEffect } from 'react'\r\nimport { getUser } from '../../ducks/reducer'\r\nimport Quote from './Quote'\r\nimport './Quotes.css'\r\n\r\nconst Quotes = props => {\r\n    const [quotes, setQuotes] = useState([])\r\n    const [quote, setQuote] = useState('')\r\n    const [addView, setAddView] = useState(false)\r\n\r\n    const getQuotes = () => {\r\n        const id = props.user.user_id\r\n        axios.get(`/api/quotes/${id}`)\r\n            .then(res => {\r\n                setQuotes(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const createQuote = () => {\r\n        const id = props.user.user_id\r\n        axios.post(`/api/quote/${id}`, { quote })\r\n            .then(() => {\r\n                setQuote('')\r\n                getQuotes()\r\n                addViewFalse()\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const loggedinView = () => {\r\n        if (!props.user.user_id) {\r\n            props.history.push('/')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loggedinView()\r\n        getQuotes()\r\n    }, [])\r\n\r\n    const addViewTrue = () => {\r\n        setAddView(true)\r\n    }\r\n\r\n    const addViewFalse = () => {\r\n        setAddView(false)\r\n    }\r\n\r\n    const mappedQuotes = quotes.map(quote => {\r\n        return <Quote\r\n            key={quote.quote_id}\r\n            quote={quote}\r\n            getQuotes={getQuotes}\r\n            className='quote'\r\n        />\r\n    })\r\n\r\n    return (\r\n\r\n        <div className='quotes-page'>\r\n            <section className='content'>\r\n                {addView\r\n                    ? (\r\n                        <>\r\n                            <div className='quote-input-box'>\r\n                                <div className='title-box' >\r\n                                    <h2 className='quotes-title'>New Note</h2>\r\n                                </div>\r\n                                <button onClick={addViewFalse}>Return to Quotes</button>\r\n                                <textarea\r\n                                    rows='5'\r\n                                    cols='100'\r\n                                    type='text'\r\n                                    className='quote-input-text'\r\n                                    value={quote}\r\n                                    onChange={e => setQuote(e.target.value)} />\r\n                                <button onClick={createQuote} >Add Quote</button>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                    :\r\n                    <main>\r\n                        <div className='title-box' >\r\n                            <h2 className='quotes-title'>Your Quotes</h2>\r\n                        </div>\r\n                        <button className='add-view' onClick={addViewTrue}>Add New Quote</button>\r\n                        {mappedQuotes}\r\n                    </main>\r\n                }\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = reduxState => reduxState;\r\n\r\nexport default connect(mapStateToProps, { getUser })(Quotes);\r\n\r\n\r\n\r\n\r\n","C:\\Users\\camer\\Devmt\\the-study-app\\src\\components\\Quotes\\Quote.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":43,"column":8,"nodeType":"83","endLine":43,"endColumn":10,"suggestions":"84"},{"ruleId":"81","severity":1,"message":"85","line":42,"column":8,"nodeType":"83","endLine":42,"endColumn":10,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":132,"column":37,"nodeType":"89","endLine":132,"endColumn":41},{"ruleId":"81","severity":1,"message":"90","line":42,"column":8,"nodeType":"83","endLine":42,"endColumn":10,"suggestions":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getJournal' and 'loggedinView'. Either include them or remove the dependency array.","ArrayExpression",["94"],"React Hook useEffect has missing dependencies: 'getNotes' and 'loggedinView'. Either include them or remove the dependency array.",["95"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'getQuotes' and 'loggedinView'. Either include them or remove the dependency array.",["96"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [getJournal, loggedinView]",{"range":"103","text":"104"},"Update the dependencies array to be: [getNotes, loggedinView]",{"range":"105","text":"106"},"Update the dependencies array to be: [getQuotes, loggedinView]",{"range":"107","text":"108"},[1151,1153],"[getJournal, loggedinView]",[1123,1125],"[getNotes, loggedinView]",[1140,1142],"[getQuotes, loggedinView]"]